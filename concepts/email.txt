Email sucks because Received: header lines are ad-hoc and moronic, and not even lines. The only links between emails allowed is References: header, which is limited to making threads as opposed to a web of links. The Message-ID header depends on the clients to make it unique, and the clients just hope and pray instead of using a unique ID generator, like sha512 for instance. The From: header is not only optional, but arbitrary, allowing anyone to impersonate any email they know. Email addresses require you know where that person is receiving their email, and if that ever changes, you have to change the address manually.  Only 7-bit encoding is allowed, which means you have to encode binary into Quoted-Printable, Base64 or (shudder) yenc. Even non-ascii unicode characters have this restriction. And email sucks because <a href="mimeencoding.html">MIME sucks</a>.

Forum solves all these problems, even if you followed the above link recursively. There can be reliable analysis of a message's path through the network, reliable easily parsed formats that can almost always be loaded <a href="piecedb.html">piecewise</a> instead of as a whole, globally unique message IDs automatically and mandatory. Forum makes impersonating an <a href="signing.html">impossibility</a>, and addresses in it need not have location information, so if your delivery location changes everyone doesn't have to change their addressbook to match. Forum is designed for multimedia hypertext style <a href="attachments.html">linking</a>, without the disadvantages of HTML links, and unlike email forum can link to any message or attachment for any reason, not just as a reference or reply. Binary coding is allowed, and expected. There are no boundaries or escape characters anywhere to be seen. And since piecedb works fine whether you have every piece on the planet or not, it can be replicated between keyservers intelligently, instead of total bandwidth heavy wasteful redundancy. Encryption and signing are of the whole message. Signatures can be verified, and identified as to who's sending this to you with the very first bit of data, and the message itself can be verified piecewise as it arrives, discarding any pieces that don't belong in it, or rejecting the rest of the message entirely if it appears suspicious or spammy.
